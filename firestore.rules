rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }
    // Read teacher role from roles/{uid} (no Cloud Functions needed)
    function isTeacher() {
      return isSignedIn() &&
             get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'teacher';
    }
    function isSelf(uid) { return isSignedIn() && request.auth.uid == uid; }

    // Users store (profile, settings)
    match /users/{uid} {
      allow read: if isSelf(uid) || isTeacher();
      allow write: if isSelf(uid) || isTeacher();
    }

    // Face embeddings store
    match /embeddings/{id} {
      allow read: if isSignedIn();  // Need for recognition
      allow create: if isTeacher(); // Only teachers can enroll
      allow update, delete: if isTeacher();
    }

    // Classes subtree
    match /classes/{classId} {
      allow read: if isTeacher();

      match /sessions/{sessionId} {
        allow read, write: if isTeacher();

        match /records/{uid} {
          // student can see their own record; teacher can see all
          allow read: if isTeacher() || isSelf(uid);
          // only teachers can write attendance
          allow write: if isTeacher();
        }
      }

      // Aggregated grades/amount â€“ teacher writes, student can read only their own
      match /grades/{uid} {
        allow read: if isTeacher() || isSelf(uid);
        allow write: if isTeacher();
      }
    }

    // Roles (only teacher allowed to write others? keep console-only writes for safety)
    match /roles/{uid} {
      allow read: if isSelf(uid) || isTeacher();
      // prevent accidental writes from the app; manage via console
      allow write: if false;
    }
  }
}
